{"version":3,"sources":["serviceWorker.js","components/Select.jsx","redux/actions/action.js","components/Image.jsx","components/RandomButton.jsx","App.js","redux/reducers/ImageReducer.js","redux/reducers/ListReducer.js","redux/reducers/RandomReducer.js","redux/reducers/rootReducer.js","DogApiServices.js","redux/sagas.js","redux/store.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","connect","state","dogList","getListReducer","allDogs","dispatch","fetchImageDog","name","type","breed","getDogBreed","payload","_ref","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setName","inputLabel","useRef","_React$useState3","_React$useState4","labelWidth","setLabelWidth","useEffect","current","offsetWidth","react_default","a","createElement","FormControl","variant","color","className","InputLabel","ref","htmlFor","Select","native","value","onChange","event","target","inputProps","id","length","map","dog","key","card","width","height","borderColor","bullet","display","transform","title","fontSize","dogImg","getImageReducer","dogBreed","randomDog","getRandomReducer","randomBreed","randomDogBreed","status","Fragment","Card","CardContent","Typography","gutterBottom","src","alt","style","root","& > *","padding","fetchRandomDog","Button","onClick","textAlign","fontFamily","fetchingDogsList","justifyContent","flexWrap","components_Select","Image","components_RandomButton","initialState","loading","errorMessage","rootReducer","combineReducers","arguments","undefined","action","objectSpread","getAllDogsBreed","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","abrupt","data","message","stop","apply","this","_ref2","_callee2","_context2","concat","_x","getRandom","_ref3","_callee3","_context3","getDogsList","getOneDog","getRandomDog","watcherSaga","List","call","keys","put","t0","_marked","_marked2","sliceBreed","full","slice","indexOf","_marked3","_context4","takeEvery","_marked4","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eed5bf11.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDogBreed } from \"../redux/actions/action\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 300,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction SelectComponent({ fetchImageDog, dogList, getDogBreed }) {\r\n  const classes = useStyles();\r\n  const [name, setName] = React.useState(\"\");\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setName(event.target.value);\r\n    fetchImageDog(event.target.value);\r\n    getDogBreed(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl variant=\"outlined\" color='secondary' className={classes.formControl}>\r\n        <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\r\n          Choose a dog\r\n        </InputLabel>\r\n        <Select\r\n          native\r\n          value={name}\r\n          onChange={handleChange}\r\n          labelWidth={labelWidth}\r\n          inputProps={{\r\n            name: \"name\",\r\n            id: \"outlined-age-native-simple\"\r\n          }}\r\n        >\r\n          <option value=\"\" />\r\n          {dogList && dogList.length > 0\r\n            ? dogList.map(dog => (\r\n                <option key={dog} value={dog}>\r\n                  {dog}\r\n                </option>\r\n              ))\r\n            : null}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({ dogList: state.getListReducer.allDogs });\r\n\r\nconst MapDispatchToProps = dispatch => ({\r\n  fetchImageDog: name => dispatch({ type: \"FETCHING_DATA_IMAGE\", breed: name }),\r\n  getDogBreed: breed => dispatch(getDogBreed(breed))\r\n});\r\n\r\nexport default connect(mapStateToProps, MapDispatchToProps)(SelectComponent);\r\n","\r\n\r\nconst getDogBreed = breed => ({\r\n  type: \"GET_DOG_BREED\",\r\n  payload: breed\r\n});\r\n\r\nexport { getDogBreed };\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction DogCard({ dogBreed, dogImg, randomDog, status, randomBreed }) {\r\n  const classes = useStyles();\r\n\r\n  if (status === \"choose\") {\r\n    return (\r\n      <React.Fragment>\r\n        {dogBreed !== \"\" && dogImg !== \"\" ? (\r\n          <Card className={classes.card} variant=\"outlined\">\r\n            <CardContent>\r\n              <Typography\r\n                className={classes.title}\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n              >\r\n                {dogBreed}\r\n              </Typography>\r\n              {dogImg ? (\r\n                <img src={dogImg} alt=\"dogImg\" style={{ width: \"100%\" }}></img>\r\n              ) : null}\r\n            </CardContent>\r\n          </Card>\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        {randomBreed !== \"\" && randomDog !== \"\" ? (\r\n          <Card className={classes.card} variant=\"outlined\">\r\n            <CardContent>\r\n              <Typography\r\n                className={classes.title}\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n              >\r\n                {randomBreed}\r\n              </Typography>\r\n              {randomDog ? (\r\n                <img\r\n                  src={randomDog}\r\n                  alt=\"randomDog\"\r\n                  style={{ width: \"100%\" }}\r\n                ></img>\r\n              ) : null}\r\n            </CardContent>\r\n          </Card>\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: 300,\r\n    height: \"auto\",\r\n    margin: 8,\r\n    borderColor: \"#f50057\"\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\"\r\n  },\r\n  title: {\r\n    fontSize: 23\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  dogImg: state.getImageReducer.dogImg,\r\n  dogBreed: state.getListReducer.dogBreed,\r\n  randomDog: state.getRandomReducer.randomDog,\r\n  randomBreed: state.getRandomReducer.randomDogBreed\r\n});\r\n\r\nexport default connect(mapStateToProps)(DogCard);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      padding: '15px 87px',\r\n    }\r\n  }\r\n}));\r\n\r\nfunction RandomButton({fetchRandomDog}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"outlined\" color=\"secondary\" onClick={() => fetchRandomDog()}>\r\n        Random Dog\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MapDispatchToProps = dispatch => ({\r\n  fetchRandomDog: () => dispatch({ type: \"FETCHING_DATA_RANDOM\" })\r\n});\r\n\r\nexport default connect(null, MapDispatchToProps)(RandomButton);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SelectComponent from \"./components/Select\";\r\nimport DogCard from \"./components/Image\";\r\nimport RandomButton from './components/RandomButton';\r\n\r\nfunction App({ fetchingDogsList, fetchImageDog, dogList, dogImg }) {\r\n\r\n  useEffect(() => {\r\n    fetchingDogsList();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 style={style}>Dog App</h1>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-evenly\", flexWrap: 'wrap' }}>\r\n        <div>\r\n          <h3 style={style}>Choose a Dog</h3>\r\n          <SelectComponent dogList={dogList} />\r\n          <DogCard status={'choose'}/>\r\n        </div>\r\n        <div>\r\n          <h3 style={style}>Random Dog</h3>\r\n          <RandomButton/>\r\n          <DogCard status={'random'}/>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst style = {\r\n  textAlign: \"center\",\r\n  fontFamily: \"cursive\",\r\n  color: \"#f50057\"\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dogList: state.allDogs,\r\n    dogImg: state.dogImg\r\n  };\r\n};\r\n\r\nconst MapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchingDogsList: () => dispatch({ type: \"FETCHING_DATA\" }),\r\n    fetchImageDog: () => dispatch({ type: \"FETCHING_DATA_IMAGE\" })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, MapDispatchToProps)(App);\r\n","let initialState = {\r\n  dogImg: \"\",\r\n  loading: false,\r\n  errorMessage: \"\"\r\n};\r\n\r\nexport const getImageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FETCHING_DATA_IMAGE\":\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case \"FETCHING_IMAGE_SUCCESSESED\":\r\n      return {\r\n        ...state,\r\n        dogImg: action.payload,\r\n        loading: false\r\n      };\r\n    case \"FETCHING_DATA_ERROR\":\r\n      return {\r\n        ...state,\r\n        dogBreed: \"\",\r\n        dogImg: \"\",\r\n        allDogs: [],\r\n        loading: false,\r\n        errorMessage: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","let initialState = {\r\n  allDogs: [],\r\n  loading: false,\r\n  errorMessage: \"\",\r\n  dogBreed: \"\",\r\n};\r\n\r\nexport const getListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_DOG_BREED\":\r\n      return {\r\n        ...state,\r\n        dogBreed: action.payload\r\n      };\r\n\r\n    case \"FETCHING_DATA\":\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case \"FETCHING_DATA_SUCCESSESED\":\r\n      return {\r\n        ...state,\r\n        allDogs: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    case \"FETCHING_IMAGE_ERROR\":\r\n      return {\r\n        ...state,\r\n        dogBreed: \"\",\r\n        dogImg: \"\",\r\n        allDogs: [],\r\n        loading: false,\r\n        errorMessage: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","let initialState = {\r\n  randomDog: \"\",\r\n  randomDogBreed: \"\",\r\n  loading: false,\r\n  errorMessage: \"\"\r\n};\r\n\r\nexport const getRandomReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FETCHING_DATA_RANDOM\":\r\n      return {\r\n        ...state,\r\n        randomDog: action.payload\r\n      };\r\n    case \"FETCHING_RANDOM_SUCCESSESED\":\r\n      return {\r\n        ...state,\r\n        randomDog: action.payload[0],\r\n        randomDogBreed: action.payload[1],\r\n        loading: false\r\n      };\r\n    case \"FETCHING_RANDOM_ERROR\":\r\n      return {\r\n        ...state,\r\n        dogBreed: \"\",\r\n        dogImg: \"\",\r\n        allDogs: [],\r\n        randomDog: \"\",\r\n        loading: false,\r\n        errorMessage: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { getImageReducer } from \"./ImageReducer\";\r\nimport { getListReducer } from \"./ListReducer\";\r\nimport { getRandomReducer } from \"./RandomReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  getImageReducer,\r\n  getRandomReducer,\r\n  getListReducer\r\n});\r\n","import axios from \"axios\";\r\n\r\nconst getAllDogsBreed = async () => {\r\n  const res = await axios.get(\"https://dog.ceo/api/breeds/list/all\");\r\n  return res.data.message;\r\n};\r\n\r\nconst getDogBreed = async name => {\r\n  const res = await axios.get(\r\n    `https://dog.ceo/api/breed/${name}/images/random`\r\n  );\r\n  return res.data.message;\r\n};\r\n\r\nconst getRandom = async () => {\r\n  const res = await axios.get(\"https://dog.ceo/api/breeds/image/random\");\r\n  return res.data.message;\r\n};\r\n\r\nexport { getAllDogsBreed, getDogBreed, getRandom };\r\n","import { takeEvery, call, put } from \"redux-saga/effects\";\r\n\r\nimport { getAllDogsBreed, getDogBreed, getRandom } from \"../DogApiServices\";\r\n\r\nfunction* getDogsList() {\r\n  try {\r\n    const List = yield call(getAllDogsBreed);\r\n    const dogList = Object.keys(List);\r\n    yield put({ type: \"FETCHING_DATA_SUCCESSESED\", payload: dogList });\r\n  } catch (err) {\r\n    yield put({ type: \"FETCHING_DATA_ERROR\", payload: err });\r\n  }\r\n};\r\n\r\nfunction* getOneDog(name) {\r\n  try {\r\n    const dogImg = yield call(getDogBreed, name.breed);\r\n    yield put({ type: \"FETCHING_IMAGE_SUCCESSESED\", payload: dogImg });\r\n  } catch (err) {\r\n    yield put({ type: \"FETCHING_IMAGE_ERROR\", payload: err });\r\n  }\r\n};\r\n\r\nfunction* getRandomDog() {\r\n  try {\r\n    const randomDog = yield call(getRandom);\r\n    let sliceBreed = randomDog.slice(30);\r\n    let full = sliceBreed.indexOf(\"/\");\r\n    let breed = sliceBreed.slice(0, full);\r\n\r\n    yield put({\r\n      type: \"FETCHING_RANDOM_SUCCESSESED\",\r\n      payload: [randomDog, breed]\r\n    });\r\n  } catch (err) {\r\n    yield put({ type: \"FETCHING_RANDOM_ERROR\", payload: err });\r\n  }\r\n};\r\n\r\nexport default function* watcherSaga() {\r\n  yield takeEvery(\"FETCHING_DATA\", getDogsList);\r\n  yield takeEvery(\"FETCHING_DATA_IMAGE\", getOneDog);\r\n  yield takeEvery(\"FETCHING_DATA_RANDOM\", getRandomDog);\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport { rootReducer } from \"./reducers/rootReducer\";\r\nimport watcherSaga from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(watcherSaga);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}